name: nff_web_build_and_deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop # TEMP!
    paths:
      - "web/**"
      - ".github/workflows/nff_web_build_and_deploy.yaml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go Faster
        uses: WillAbides/setup-go-faster@v1.14.0
        with:
         go-version: 1.22.5

      - name: Generate templ code
        working-directory: ./web
        run: |
          go install github.com/a-h/templ/cmd/templ@v0.2.707
          templ generate -path ./ui

      - name: Build project binary
        working-directory: ./web
        run: |
          go build -o nff main.go

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: nff
          path: ./web/nff

  migrate:
    needs: build
    runs-on: ubuntu-latest
    env:
      RDS_DB_URL: ${{ secrets.RDS_DB_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup goose
        uses: mscno/setup-goose@v1

      - name: Apply migrations
        working-directory: ./web
        run: |
          goose -dir ./database/migrations -v -s postgres $RDS_DB_URL up


  deploy:
    needs:
      - build
      - migrate
    runs-on: ubuntu-latest
    env:
      PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      HOSTNAME: ${{ secrets.EC2_SSH_HOST_2 }}
      USER_NAME: ${{ secrets.EC2_USER_NAME }}
      RDS_DB_URL: ${{ secrets.RDS_DB_URL }}
      ELASTICACHE_URL: ${{ secrets.ELASTICACHE_URL }}
      SS_API_BASE_URL: ${{ secrets.SS_API_BASE_URL }}
    steps:
      - name: Set up private key
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

      - name: Download binary artifact
        uses: actions/download-artifact@v4
        with:
          name: nff
          path: .

      - name: Transfer binary to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i private_key.pem ./nff ${USER_NAME}@${HOSTNAME}:/home/${USER_NAME}/
      
      - name: Deploy binary on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${USER_NAME}@${HOSTNAME} "
            chmod +x nff &&
            sudo killall nff || true &&
            export DB_URL=$RDS_DB_URL &&
            export REDIS_URL=$ELASTICACHE_URL &&
            export SS_API_BASE_URL=$SS_API_BASE_URL &&
            export START_FRESH=true &&
            export TZ=America/Sao_Paulo &&
            export PORT=80 &&
            sudo nohup ./nff > nff.log 2>&1 || { echo 'Failed to start nff'; exit 1; }
          "

      - name: Clean up private key
        run: rm private_key.pem

package shared

import "strconv"

templ NotificationBell() {
	<button onclick="ShowNotificationDialog()" class="relative transform rounded-full transition hover:bg-sky-800 active:scale-90 xl:p-2">
		@IconSm("bell")
		@NotificationCounter()
	</button>
	@NotificationDialog()
}

templ NotificationCounter() {
	<div class="min-w-5 max-w-6 absolute -right-3.5 -top-2 rounded-full bg-red-600 py-0.5 text-center text-xs text-white xl:-right-1.5 xl:-top-0.5">
		7
	</div>
}

templ NotificationDialog() {
	<dialog id="notification-dialog" class="rounded shadow shadow-gray-700">
		<div class="flex items-center justify-between bg-gray-100 px-4 py-2 ">
			<h2 class="text-lg font-bold">Notificações</h2>
			<div onclick="CloseNotificationDialog()">
				@DefaultButtonOutline("xs") {
					@IconSm("x")
				}
			</div>
		</div>
		<hr/>
		@NotificationList(getNotificationListItems())
	</dialog>
}

type A struct {
	Status string
	Type   string
}

func (a *A) GetStatus() string {
	return a.Status
}

func (a *A) GetType() string {
	return a.Type
}
func (a *A) GetCreatedAt() string {
	return a.Status
}
func (a *A) GetID() int {
	return 1
}

type Notification interface {
	GetStatus() string
	GetType() string
	GetCreatedAt() string
	GetID() int
}

func getNotificationListItems() []*A {
	return []*A{
		{Status: "success", Type: "Emissão de NFA"},
		{Status: "success", Type: "Cálculo de Métricas"},
		{Status: "warning", Type: "Cancelamento de NFA"},
		{Status: "error", Type: "Emissão de NFA"},
		{Status: "warning", Type: "Cancelamento de NFA"},
		{Status: "error", Type: "Cálculo de Métricas"},
		{Status: "canceled", Type: "Impressão/Download de NFA"},
	}
}

templ NotificationList(items []*A) {
	<ul id="notification-list" class="grid grid-cols-1 gap-2 rounded p-2 sm:grid-cols-2 sm:gap-4 lg:grid-cols-3 2xl:grid-cols-4">
		for i, item := range items {
			@NotificationListItem(item, i + 1)
		}
	</ul>
}

templ NotificationListItem(n Notification, position int) {
	<li class="relative grid grid-cols-1 gap-2 rounded p-2 shadow shadow-gray-600">
		<span class="absolute -right-1 -top-1 rounded border border-gray-300 bg-gray-100 px-2 py-1">{ strconv.Itoa(position) }</span>
		<h3 class="flex items-center gap-2 truncate rounded border border-gray-300 p-2 text-base font-bold">
			@OperationStatus(n)
		</h3>
		<ul class="grid grid-cols-1 gap-2">
			<li><strong>Tipo:</strong> <span>{ n.GetType() }</span></li>
			<li><strong>Iniciado Em:</strong> <span>14/06/2024 às 14:46:15</span></li>
			<li>
				<a href="" target="_blank">
					@DefaultButton("xs") {
						<span>Ver Resultado</span>
						@IconSm("external-link")
					}
				</a>
			</li>
		</ul>
	</li>
}

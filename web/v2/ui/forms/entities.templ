package forms

import "github.com/cayo-rodrigues/nff/web/models"
import "strconv"
import "fmt"
import "github.com/cayo-rodrigues/nff/web/ui/shared"
import "strings"

templ EntityForm(e *models.Entity) {
	<div class="sticky top-20" id="entity-form">
		<form { getHxAttrsByAction(e)... }>
			<input type="hidden" name="id" value={ strconv.Itoa(e.ID) }/>
			<div class="grid grid-cols-1 gap-2 py-2">
				<sup class="text-red-600">{ e.Errors["Name"] }</sup>
				<input
					class="flex-1 rounded border border-gray-300 p-2 text-2xl font-semibold outline-0 focus-within:border-gray-500"
					type="text"
					name="name"
					value={ e.Name }
					placeholder="Nome"
				/>
			</div>
			<hr/>
			<div class="mt-4 grid grid-cols-1 sm:grid-cols-2 sm:gap-6">
				<div class="grid grid-cols-1 gap-4">
					@shared.SelectInput(&shared.InputData{
						ID:      "user_type",
						Label:   "Tipo",
						Value:   e.UserType,
						Options: models.EntityUserTypes[:],
						ErrMsg:  e.Errors["UserType"],
					})
					@shared.Input(&shared.InputData{
						ID:     "cpf_cnpj",
						Label:  "CPF/CNPJ",
						Value:  e.CpfCnpj,
						ErrMsg: e.Errors["CpfCnpj"],
					})
					@shared.Input(&shared.InputData{
						ID:     "ie",
						Label:  "Inscrição Estadual",
						Value:  e.Ie,
						ErrMsg: e.Errors["Ie"],
					})
					@shared.Input(&shared.InputData{
						ID:        "email",
						Label:     "E-mail",
						Value:     e.Email,
						ErrMsg:    e.Errors["Email"],
						InputType: "email",
					})
					@shared.Input(&shared.InputData{
						ID:        "password",
						Label:     "Senha",
						Value:     e.Password,
						ErrMsg:    e.Errors["Password"],
						InputType: "password",
					})
				</div>
				<div class="grid grid-cols-1 gap-4">
					@shared.Input(&shared.InputData{
						ID:     "postal_code",
						Label:  "CEP",
						Value:  e.PostalCode,
						ErrMsg: e.Errors["PostalCode"],
					})
					@shared.Input(&shared.InputData{
						ID:     "neighborhood",
						Label:  "Bairro",
						Value:  e.Neighborhood,
						ErrMsg: e.Errors["Neighborhood"],
					})
					@shared.SelectInput(&shared.InputData{
						ID:      "street_type",
						Label:   "Logradouro (tipo)",
						Value:   e.StreetType,
						Options: models.EntityAddressStreetTypes[:],
						ErrMsg:  e.Errors["StreetType"],
					})
					@shared.Input(&shared.InputData{
						ID:     "street_name",
						Label:  "Logradouro (nome)",
						Value:  e.StreetName,
						ErrMsg: e.Errors["StreetName"],
					})
					@shared.Input(&shared.InputData{
						ID:     "number",
						Label:  "Número da casa",
						Value:  e.Number,
						ErrMsg: e.Errors["Number"],
					})
				</div>
				@shared.WideInput(&shared.InputData{
					ID:          "other_ies",
					Label:       "Outras IEs",
					Value:       strings.Join(e.OtherIes, ", "),
					Placeholder: "Separe por vírgulas",
					ErrMsg:      e.Errors["OtherIes"],
				})
			</div>
			<div class="flex gap-6">
				<div class="mt-4 flex-1">
					@shared.SubmitButton("md") {
						@shared.Icon(getIconNameByAction(e))
						<span>{ getTextByAction(e) }</span>
					}
				</div>
				if e.ID != 0 {
					<div class="mt-4 flex-1" hx-delete={ fmt.Sprintf("/entities/delete/%d", e.ID) }>
						@shared.DefaultButton("md") {
							@shared.Icon("trash-2")
							<span>Deletar</span>
						}
					</div>
				}
			</div>
		</form>
	</div>
}

func getUserTypes() models.SiareUserTypes {
	return models.EntityUserTypes
}

func getStreetTypes() models.SiareAddressStreetTypes {
	return models.EntityAddressStreetTypes
}

func getTextByAction(e *models.Entity) string {
	if e.ID == 0 {
		return "Registrar"
	}
	return "Editar"
}

func getIconNameByAction(e *models.Entity) string {
	if e.ID == 0 {
		return "user-plus"
	}
	return "edit"
}

func getHxAttrsByAction(e *models.Entity) templ.Attributes {
	if e.ID == 0 {
		return templ.Attributes{
			"hx-post": "/entities/create",
		}
	}
	return templ.Attributes{
		"hx-put": fmt.Sprintf("/entities/update/%d", e.ID),
	}
}

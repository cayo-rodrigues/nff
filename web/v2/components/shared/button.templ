package shared

templ Button(theme string, attrs templ.Attributes) {
	<button class={ getButtonClassesByTheme(theme) } { attrs... }>
		{ children... }
	</button>
}

templ SubmitButton() {
	@Button("success", templ.Attributes{"type": "submit"}) {
		{ children... }
	}
}

templ SuccessButton() {
	@Button("success", templ.Attributes{"type": "button"}) {
		{ children... }
	}
}

templ WarningButton() {
	@Button("warning", templ.Attributes{"type": "button"}) {
		{ children... }
	}
}

templ ErrorButton() {
	@Button("error", templ.Attributes{"type": "button"}) {
		{ children... }
	}
}

templ InfoButton() {
	@Button("info", templ.Attributes{"type": "button"}) {
		{ children... }
	}
}

templ DefaultButton() {
	@Button("default", templ.Attributes{"type": "button"}) {
		{ children... }
	}
}

func getButtonClassesByTheme(theme string) string {
	classes := "flex w-full flex-col items-center justify-center gap-2 rounded px-2 py-1 sm:flex-row sm:items-start sm:gap-3 sm:px-4 sm:py-3"
	colors := ""
	switch theme {
	case "success":
		colors = "bg-green-400 hover:bg-green-500 active:bg-green-600"
	case "warning":
		colors = "bg-yellow-400 hover:bg-yellow-500"
	case "error":
		colors = "bg-red-400 hover:bg-red-500"
	case "info":
		colors = "bg-sky-400 hover:bg-sky-500"
	default:
		colors = "bg-gray-400 hover:bg-gray-500"
	}

	return classes + " " + colors
}
